package be.howest.sooa.o8.gui;

import be.howest.sooa.o8.domain.Trainer;
import java.awt.event.ActionEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Hayk
 */
public class TrainerFormDialog extends javax.swing.JDialog {

    private final SelectTrainerDialog parent;
    private transient Trainer trainer;
    private String oldTrainerName;

    public TrainerFormDialog(SelectTrainerDialog parent) {
        this(parent, null);
    }

    public TrainerFormDialog(SelectTrainerDialog parent, Trainer trainer) {
        super(parent, true);
        initComponents();
        this.parent = parent;
        this.trainer = trainer;
        if (trainer != null) {
            this.oldTrainerName = trainer.getName();
            nameField.setText(oldTrainerName);
        }
        addListeners();
    }

    // <editor-fold defaultstate="collapsed" desc="Listeners">
    private void addListeners() {
        addNameFieldListeners();
        addCloseButtonActionListener();
        addSaveButtonActionListener();
    }

    private void addNameFieldListeners() {
        nameField.getDocument()
                .addDocumentListener(new NameChangedListener(this));
        nameField.addActionListener((ActionEvent e) -> {
            saveButton.doClick();
        });
    }

    private void addCloseButtonActionListener() {
        closeButton.addActionListener((ActionEvent e) -> {
            setVisible(false);
        });
    }

    private void addSaveButtonActionListener() {
        saveButton.addActionListener((ActionEvent e) -> {
            String name = nameField.getText().trim();
            if (trainer != null) {
                trainer.setName(name);
            } else {
                trainer = new Trainer(name);
            }
            if (oldTrainerName == null) {
                parent.saveTrainer(trainer);
            } else {
                parent.updateTrainerName(trainer, oldTrainerName);
            }
            close();
        });
    }
    // </editor-fold>

    @Override
    public void setVisible(boolean visible) {
        errorLabel.setText("");
        messageLabel.setText("");
        super.setVisible(visible);
    }

    private void close() {
        trainer = null;
        oldTrainerName = null;
        setVisible(false);
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nameLabel.setText("Trainer Name");

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("E");

        closeButton.setText("Do not save");

        saveButton.setText("Save Trainer");
        saveButton.setEnabled(false);

        messageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton))
                    .addComponent(messageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    // <editor-fold defaultstate="collapsed" desc="Custom Listeners">
    private static class NameChangedListener implements DocumentListener {

        static final String PATTERN = "^_?([A-Z]|[a-z])+((_|\\s)?([A-Z]|[a-z]|[1-9])+)+_?$";
        final TrainerFormDialog trainerFormDialog;

        NameChangedListener(TrainerFormDialog trainerFormDialog) {
            this.trainerFormDialog = trainerFormDialog;
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            validateInput();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            validateInput();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            validateInput();
        }

        void validateInput() {
            String value = trainerFormDialog.nameField.getText().trim();
            boolean validName = value.matches(PATTERN) && !"".equals(value);
            boolean sameName = trainerFormDialog.oldTrainerName != null
                    && value.equals(trainerFormDialog.oldTrainerName);
            trainerFormDialog.saveButton.setEnabled(validName && !sameName);
            if (validName || sameName) {
                trainerFormDialog.errorLabel.setText("");
                trainerFormDialog.messageLabel.setText("");
            } else {
                trainerFormDialog.errorLabel.setText("Wrong trainer name!");
                trainerFormDialog.messageLabel
                        .setText("<html>The name length must be at least 2 characters long<br>"
                                + "and begin with a letter or underscore then a letter,<br>"
                                + "then alphanumeric characters splitted by a space or an underscore.</html>");
            }
        }
    }
    // </editor-fold>
}
